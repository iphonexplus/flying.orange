<rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="http://search.yahoo.com/mrss/" version="2.0"><channel><title>Flying Orange</title><description>Growing Up, Flying Up</description><link>http://localhost:2368/</link><image><url>http://localhost:2368/favicon.png</url><title>Flying Orange</title><link>http://localhost:2368/</link></image><generator>Ghost 2.0</generator><lastBuildDate>Fri, 24 Aug 2018 15:42:56 GMT</lastBuildDate><atom:link href="http://localhost:2368/rss/" rel="self" type="application/rss+xml"/><ttl>60</ttl><item><title>GO:The usage of 'defer'</title><description>&lt;p&gt;&lt;code&gt;defer&lt;/code&gt;	is very useful in control. It is used within a function.&lt;/p&gt;&lt;p&gt;If a function contains one or multiple &lt;code&gt;defer&lt;/code&gt;	command, it will not really return or finish unless all the functions followed directly by &lt;code&gt;defer&lt;/code&gt;	have finished. All the functions are called 'delayed' functions if they are on the&lt;/p&gt;</description><link>http://localhost:2368/go-the-usage-of-defer/</link><guid isPermaLink="false">5b801e5efed40d4de32dcd2e</guid><category>golang</category><dc:creator>Orange</dc:creator><pubDate>Fri, 24 Aug 2018 15:22:32 GMT</pubDate><media:content url="http://localhost:2368/content/images/2018/08/golang-1.jpg" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2018/08/golang-1.jpg" alt="GO:The usage of 'defer'"&gt;&lt;p&gt;&lt;code&gt;defer&lt;/code&gt;	is very useful in control. It is used within a function.&lt;/p&gt;&lt;p&gt;If a function contains one or multiple &lt;code&gt;defer&lt;/code&gt;	command, it will not really return or finish unless all the functions followed directly by &lt;code&gt;defer&lt;/code&gt;	have finished. All the functions are called 'delayed' functions if they are on the right side of &lt;code&gt;defer&lt;/code&gt;. You can release the resources using &lt;code&gt;defer&lt;/code&gt;	right after requesting it, in case you forget to release at the end of a function.&lt;/p&gt;&lt;p&gt;If the &lt;code&gt;defer&lt;/code&gt;	function has some input arguments, the input expressions will be calculated directly. But the &lt;code&gt;defer&lt;/code&gt;	function will not be executed immediately.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;package main

import (
    "fmt"
)

func mixed(n,m int) (number int) {
    fmt.Println("step mixed")
    return n+m
}

func modify(n int) (number int) {
    defer func (plus int) (result int) {
        fmt.Println("Coming in defer")
        result = n + plus
        number += result
        fmt.Println(number)
        return
    }(mixed(1,2))
    fmt.Println("step 1", number)
    number++
    fmt.Println("step 2", number)
    return
}

func main() {
    modify(2)
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The output is shown as below:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;go run defer_learn.go
step mixed
step 1 0
step 2 1
Coming in defer
6&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Let's see another example.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;func printNumbers() {
    for i:=0; i&amp;lt;5; i++ {
        defer fmt.Printf("%d", i)
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The result is: &lt;code&gt;43210&lt;/code&gt;	not &lt;code&gt;01234&lt;/code&gt;	because this for loop can translate into the following statements:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;fmt.Printf("%d",0)
fmt.Printf("%d",1)
fmt.Printf("%d",2)
fmt.Printf("%d",3)
fmt.Printf("%d",4)&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When the function &lt;code&gt;printNumbers&lt;/code&gt;	wants to finish, it executes all &lt;code&gt;defer&lt;/code&gt;	statements using &lt;code&gt;FIFO&lt;/code&gt;	mode. So the output is &lt;code&gt;43210&lt;/code&gt;.&lt;/p&gt;&lt;p&gt;If we change the &lt;code&gt;defer&lt;/code&gt;	statement a little into this:&lt;/p&gt;&lt;pre&gt;&lt;code&gt;func printNumbers() {
    for i:=0; i&amp;lt;5; i++ {
        defer func() {
            fmt.Printf("%d", i)
        }()
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The result is &lt;code&gt;55555&lt;/code&gt;	because &lt;code&gt;defer&lt;/code&gt;	function doesn't have input argument, so it has nothing to calculate before really execution. There will be 5 &lt;code&gt;fmt.Printf("%d", i)&lt;/code&gt;	listing before &lt;code&gt;printNumbers&lt;/code&gt;	finishes where &lt;code&gt;i=5&lt;/code&gt;	at this point of time.&lt;/p&gt;</content:encoded></item><item><title>GO:Channel and Select</title><description>&lt;p&gt;The &lt;code&gt;select&lt;/code&gt; statement lets a goroutine wait on multiple communication operations.&lt;/p&gt;&lt;p&gt;A &lt;code&gt;select&lt;/code&gt; blocks until one of its cases can run, then it executes that case. It chooses one at random if multiple are ready.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;package main

import "fmt"

func fibonacci(c, quit chan int) {
    x, y := 0, 1
    for&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/go-yu-yan-select/</link><guid isPermaLink="false">5b7ea5f3b9aee8f4ca09cc42</guid><category>golang</category><dc:creator>Orange</dc:creator><pubDate>Thu, 23 Aug 2018 13:16:24 GMT</pubDate><media:content url="http://localhost:2368/content/images/2018/08/golang.jpg" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2018/08/golang.jpg" alt="GO:Channel and Select"&gt;&lt;p&gt;The &lt;code&gt;select&lt;/code&gt; statement lets a goroutine wait on multiple communication operations.&lt;/p&gt;&lt;p&gt;A &lt;code&gt;select&lt;/code&gt; blocks until one of its cases can run, then it executes that case. It chooses one at random if multiple are ready.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;package main

import "fmt"

func fibonacci(c, quit chan int) {
    x, y := 0, 1
    for {
        select {
        case c &amp;lt;- x:
            x, y = y, x+y
        case &amp;lt;-quit:
            fmt.Println("quit")
            return
        }
    }
}

func main() {
    c := make(chan int)
    quit := make(chan int)
    go func() {
        for i := 0; i &amp;lt; 10; i++ {
            fmt.Println(&amp;lt;-c)
        }
        quit &amp;lt;- 0
    }()
    fibonacci(c, quit)
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;First time I read the code, I wonder why the first case in select block only runs 10 times, not infinitely.&lt;/p&gt;&lt;p&gt;The reason is, the channel c, which initialized by &lt;code&gt;make(chan int)&lt;/code&gt;	,  is an unbuffered channel. That's to say, unless it was fetched,  the sending operation will be blocked. So 	&lt;code&gt;case c &amp;lt;- x&lt;/code&gt;	can only be jumped into when &lt;code&gt;fmt.Println(&amp;lt;-c)&lt;/code&gt;	was executed.  More details,  &lt;code&gt;c &amp;lt;- x&lt;/code&gt;	is executed but not finished, at this time, &lt;code&gt;c&lt;/code&gt;	has a value &lt;code&gt;x&lt;/code&gt;	. In the other goroutine, when coming to &lt;code&gt;&amp;lt;-c&lt;/code&gt;	, it will succeed fetching the value &lt;code&gt;x&lt;/code&gt;	. Immediately after this, &lt;code&gt;c &amp;lt;- x&lt;/code&gt;	is finished and makes &lt;code&gt;c&lt;/code&gt;	still an unbuffered channel, not buffered channel with capacity 1.&lt;/p&gt;</content:encoded></item><item><title>Eigen Matrix在原有大小上增加列</title><description>&lt;p&gt;直接上代码&lt;/p&gt;&lt;pre&gt;&lt;code&gt;
#include &amp;lt;iostream&amp;gt;
#include &amp;lt;Eigen/Core&amp;gt;
#include &amp;lt;Eigen/Dense&amp;gt;
using namespace Eigen;
using namespace std;

#define ROWS 4 
template &amp;lt;typename Derived&amp;gt;
void vectorDistance(const EigenBase&amp;lt;Derived&amp;gt;&amp;amp; a, const EigenBase&amp;lt;Derived&amp;gt;&amp;amp; b)
{
    const ArrayXf A = a;
    const&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/eigen-matrixzai-yuan-you-da-xiao-shang-zeng-jia-lie/</link><guid isPermaLink="false">5b78dd1e6b7fce0f556f1c41</guid><category>geek</category><category>中文博客</category><dc:creator>Orange</dc:creator><pubDate>Sun, 19 Aug 2018 03:03:51 GMT</pubDate><media:content url="http://localhost:2368/content/images/2018/08/cpp.jpg" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2018/08/cpp.jpg" alt="Eigen Matrix在原有大小上增加列"&gt;&lt;p&gt;直接上代码&lt;/p&gt;&lt;pre&gt;&lt;code&gt;
#include &amp;lt;iostream&amp;gt;
#include &amp;lt;Eigen/Core&amp;gt;
#include &amp;lt;Eigen/Dense&amp;gt;
using namespace Eigen;
using namespace std;

#define ROWS 4 
template &amp;lt;typename Derived&amp;gt;
void vectorDistance(const EigenBase&amp;lt;Derived&amp;gt;&amp;amp; a, const EigenBase&amp;lt;Derived&amp;gt;&amp;amp; b)
{
    const ArrayXf A = a;
    const ArrayXf B = b;
    cout &amp;lt;&amp;lt; A &amp;lt;&amp;lt; B &amp;lt;&amp;lt; endl; 
}


float arrayXfDistance(const Ref&amp;lt;const ArrayXf&amp;gt; x, const Ref&amp;lt;const ArrayXf&amp;gt; y)
{
    return (float)sqrt((x-y).square().sum());
}

int main()
{
    int ids = 2; // person folder number
    MatrixXf globalF(ROWS, ids); // global matrix
    ArrayXf v(3);
    ArrayXf w(3);
    v &amp;lt;&amp;lt; 0,
         5,
         1;
    w &amp;lt;&amp;lt; 3,
         1.4,
         1;
    cout &amp;lt;&amp;lt; arrayXfDistance(w,v) &amp;lt;&amp;lt; endl;
    cout &amp;lt;&amp;lt; w.matrix() &amp;lt;&amp;lt; endl;
    vectorDistance(w,v);

    MatrixXf m = MatrixXf::Random(ROWS, 2);
    cout &amp;lt;&amp;lt; m &amp;lt;&amp;lt; endl;
    globalF = m;
    MatrixXf k = MatrixXf::Random(ROWS,1);
    cout &amp;lt;&amp;lt; k &amp;lt;&amp;lt; endl;
    for(int t=1; t&amp;lt;10; t++)
    {
        MatrixXf tmp(ROWS,ids+t-1);
        tmp = globalF;
        globalF.resize(ROWS, ids+t);  // change global matrix size
        cout &amp;lt;&amp;lt; globalF.rows() &amp;lt;&amp;lt; " "  &amp;lt;&amp;lt; globalF.cols() &amp;lt;&amp;lt; endl;   
        globalF &amp;lt;&amp;lt; tmp,k;  // append new feature in the end
        cout &amp;lt;&amp;lt; globalF &amp;lt;&amp;lt; endl;
        cout &amp;lt;&amp;lt; arrayXfDistance(globalF.col(1).array(),globalF.col(2).array()) &amp;lt;&amp;lt; endl;
    }

}
                                                                             &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;编译命令：&lt;br&gt;&lt;br&gt;&lt;code&gt;g++ -I /home/user/workstation/eigen/eigen/ test3.cpp -o test3&lt;/code&gt;&lt;/p&gt;</content:encoded></item><item><title>NYU黑马小结</title><description>&lt;h2 id="-"&gt;项目简介 - 电子扬琴&lt;/h2&gt;&lt;p&gt;大概是2014年底，参加上海纽约大学的黑客马拉松比赛项目。&lt;/p&gt;&lt;h3 id="--1"&gt;主要技术###&lt;/h3&gt;&lt;p&gt;--硬件技术：焊接，小到wii cam 摄像头模块0.5mm的焊盘间距，大到0805电阻电容IIC电平转换电路，都是我们一丝不苟焊接完成&lt;br&gt;&lt;/p&gt;&lt;figure class="kg-image-card"&gt;&lt;img src="http://7xjxqh.com2.z0.glb.clouddn.com/nyupic.jpg" class="kg-image" alt="pic"&gt;&lt;/figure&gt;&lt;figure class="kg-image-card"&gt;&lt;img src="http://7xjxqh.com2.z0.glb.clouddn.com/zuopin.jpg" class="kg-image" alt="pic"&gt;&lt;/figure&gt;&lt;p&gt;&lt;br&gt;--软件技术：&lt;br&gt;1. IR 红外摄像头wii cam的使用&lt;br&gt;2. 压电传感&lt;br&gt;3. Arduino 编程&lt;/p&gt;&lt;h3 id="--2"&gt;应用场景###&lt;/h3&gt;&lt;p&gt;很多小孩子都很有可能学习一到两种乐器，其中有很多，其实都是按照家长的意愿在学习。比如有的孩子可能天赋是钢琴，家长却让他学了二胡，有的孩子天赋是扬琴，家长却让学了萨克斯。如果能够在决定学习那种乐器之前就能发现孩子真正的兴趣所在，岂不是更好？&lt;br&gt;我们以扬琴为例，在还没有决定是否学习之前，铺上一块扬琴桌布，先让孩子完成测试，看看是否有这方面的天赋。换一块架子鼓桌布，就可以测试一下是否有架子鼓方面的天赋。&lt;br&gt;选择一种孩子真的有兴趣并且是天赋所在的乐器来进行学习，不但能让孩子发展的更好，更重要的是，这个发展的成长的过程是快乐的。&lt;/p&gt;&lt;h2 id="--3"&gt;比赛收获&lt;/h2&gt;&lt;p&gt;在整个比赛中，我用自带的恒温焊台和示波器，同何老大一起enable了压电传感部分、IIC电平转换、&lt;/p&gt;</description><link>http://localhost:2368/nyuhei-ma-xiao-jie/</link><guid isPermaLink="false">5b78dcb16b7fce0f556f1c3d</guid><category>geek</category><category>中文博客</category><dc:creator>Orange</dc:creator><pubDate>Sun, 19 Aug 2018 02:58:35 GMT</pubDate><media:content url="http://localhost:2368/content/images/2018/08/hackathon.jpeg" medium="image"/><content:encoded>&lt;h2 id="-"&gt;项目简介 - 电子扬琴&lt;/h2&gt;&lt;img src="http://localhost:2368/content/images/2018/08/hackathon.jpeg" alt="NYU黑马小结"&gt;&lt;p&gt;大概是2014年底，参加上海纽约大学的黑客马拉松比赛项目。&lt;/p&gt;&lt;h3 id="--1"&gt;主要技术###&lt;/h3&gt;&lt;p&gt;--硬件技术：焊接，小到wii cam 摄像头模块0.5mm的焊盘间距，大到0805电阻电容IIC电平转换电路，都是我们一丝不苟焊接完成&lt;br&gt;&lt;/p&gt;&lt;figure class="kg-image-card"&gt;&lt;img src="http://7xjxqh.com2.z0.glb.clouddn.com/nyupic.jpg" class="kg-image" alt="NYU黑马小结"&gt;&lt;/figure&gt;&lt;figure class="kg-image-card"&gt;&lt;img src="http://7xjxqh.com2.z0.glb.clouddn.com/zuopin.jpg" class="kg-image" alt="NYU黑马小结"&gt;&lt;/figure&gt;&lt;p&gt;&lt;br&gt;--软件技术：&lt;br&gt;1. IR 红外摄像头wii cam的使用&lt;br&gt;2. 压电传感&lt;br&gt;3. Arduino 编程&lt;/p&gt;&lt;h3 id="--2"&gt;应用场景###&lt;/h3&gt;&lt;p&gt;很多小孩子都很有可能学习一到两种乐器，其中有很多，其实都是按照家长的意愿在学习。比如有的孩子可能天赋是钢琴，家长却让他学了二胡，有的孩子天赋是扬琴，家长却让学了萨克斯。如果能够在决定学习那种乐器之前就能发现孩子真正的兴趣所在，岂不是更好？&lt;br&gt;我们以扬琴为例，在还没有决定是否学习之前，铺上一块扬琴桌布，先让孩子完成测试，看看是否有这方面的天赋。换一块架子鼓桌布，就可以测试一下是否有架子鼓方面的天赋。&lt;br&gt;选择一种孩子真的有兴趣并且是天赋所在的乐器来进行学习，不但能让孩子发展的更好，更重要的是，这个发展的成长的过程是快乐的。&lt;/p&gt;&lt;h2 id="--3"&gt;比赛收获&lt;/h2&gt;&lt;p&gt;在整个比赛中，我用自带的恒温焊台和示波器，同何老大一起enable了压电传感部分、IIC电平转换、wii cam模块外围电路。&lt;br&gt;和三名队友一起拼搏24小时，并一同坚持到最终的expo 以及 presentation。收获的不单是奖品，更是和队友一同奋斗的快乐和珍贵的记忆。&lt;br&gt;我们做的项目跟硬件相关性比较大，我们自带了恒温焊台以及示波器等设备，在整个项目中起到了非常大的作用，增进了基本功。&lt;br&gt;从项目的选题直到最后做出来，我们的领袖&amp;amp;PM飞飞姐非常认真的帮我们做好了规划，思路清晰，目标明确，保证了我们能在24小时完成。&lt;br&gt;而在presentation和expo的时候，领袖光芒再次绽放，不管是一个评委的评审，还是百人的expo，都能收放自如临危不乱，将我们的24小时的工作与努力完美地展现给每一个观众、评委。&lt;/p&gt;&lt;h2 id="--4"&gt;期待提高&lt;/h2&gt;&lt;p&gt;事先准备的较少，可以提前思考一下会做什么东西，哪些工具可能用上的可能性比较大，事先准备好，以及，工欲善其事必先利其器，电脑、工具软件等都应该提前准备好。&lt;br&gt;下次如何做的更好：积极地思考，在日常工作生活中思考有可能存在的有用的创意点，同时也天马行空的思考一些点子，这样在参加黑马的时候有很多想法可以跟队友交流，另外也需要曾进自己各方面技术。&lt;/p&gt;&lt;p&gt;总结为一下几点：&lt;br&gt;1.强化技术部分，更加深入地了解开发的每一个环节，如何起步，如何测试，发现问题如何快速定位并解决。&lt;br&gt;2.多与其他人进行交流，了解别人的项目，包括项目的技术价值、创新点、进展。&lt;br&gt;3.更多地接触新鲜的技术，当下不同的技术层出不穷，从硬件到软件，从前端到后端，广泛接触研究，“好读书，不求甚解”。&lt;/p&gt;&lt;h2 id="--5"&gt;后记&lt;/h2&gt;&lt;p&gt;回到学校，睡到第二天中午11点，总算是休整过来了，想想我们的项目，感觉还是有些不完善的地方，比如声音。虽然能有声音发出，但是并没有形成音阶，更没法让用户敲击出旋律。为什么呢？这是一个比较头疼的问题。在最后的2小时内，sommily就在解决这个问题，但是没有解决出来。现在静下心来，我来试试。打开Arduino IDE，导入&lt;a href="http://playground.arduino.cc/Main/MIDILibrary"&gt;MIDI库&lt;/a&gt;，测试一下&lt;/p&gt;&lt;pre&gt;&lt;code&gt;    int m=60;
    MIDI.sendNoteOn(m,120,7);
    delay(500);
    MIDI.sendNoteOff(m,0,7);
    delay(500);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;发现可以播放出一个音符，回想起来，当时sommily一直没有解决的问题是就是这个 m 和真实的音符音高的对应关系。分析一下，这个 m 的最大值是127，而大一些的钢琴也就88键，所以很有可能一个相邻键位对应的m值相差是1。于是进行了如下的测试：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;    int m=61; // fa
    MIDI.sendNoteOn(m,120,7);
    delay(50);
    MIDI.sendNoteOff(m,0,7);
    delay(50);
    m=63;  // so
    MIDI.sendNoteOn(m,120,7);
    delay(50);
    MIDI.sendNoteOff(m,0,7);
    delay(50);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;视听了一下效果，Ding！ 听起来好像是音符 Fa 和 So， 而最开始的m=60像是 Mi 。Bingo！验证了猜想，因为Mi的升音（升Mi）就是Fa，而#Fa（升Fa）对应的应该是就没有测到的62。&lt;br&gt;接下来继续验证，果然就是这样。&lt;br&gt;现场马拉松时候另一个没有完美解决的问题是：评分显示。冷静思考一下，因为MIDI的使用使得唯一的串口被占用，无法通过串口显示出评分，那怎么办？当时没有做出来。其实还有那么多数字IO口没有使用。如果使用7段数码管，那样两位数的分数就需要至少14个IO口，数量不够。对了，要使用&lt;a href="http://arduino.cc/en/Tutorial/LiquidCrystal"&gt;1602液晶模块&lt;/a&gt;的话就可以了！只需要4个数字IO口，并且Arduino库中自带1602的库，调用也很简单。&lt;/p&gt;</content:encoded></item><item><title>Intel Galileo Gen2 有线网络上网</title><description>&lt;hr&gt;&lt;p&gt;在DeepinLinux中操作，首先要安装minicom&lt;/p&gt;&lt;pre&gt;&lt;code&gt;sudo apt-get update
sudo apt-get install minicom
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后配置minicom&lt;/p&gt;&lt;pre&gt;&lt;code&gt;sudo -s
minicom -s
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;配置好后连上板子，在终端输入&lt;/p&gt;&lt;pre&gt;&lt;code&gt;minicom
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;来访问Intel Galileo2开发板，用户名root，无密码&lt;br&gt;插上网线之后，进行如下操作来配置有线网络&lt;/p&gt;&lt;pre&gt;&lt;code&gt;ifconfig eth0 down
ifconfig eth0 192.168.199.173 netmash 255.255.255.0 up
ifup eth0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;之后可以通过&lt;/p&gt;&lt;pre&gt;&lt;code&gt;ping www.baidu.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;来测试是否可用。&lt;/p&gt;</description><link>http://localhost:2368/intel-galileo-gen2-you-xian-wang-luo-shang-wang/</link><guid isPermaLink="false">5b78dc1c6b7fce0f556f1c39</guid><category>geek</category><category>中文博客</category><dc:creator>Orange</dc:creator><pubDate>Sun, 19 Aug 2018 02:56:24 GMT</pubDate><media:content url="http://localhost:2368/content/images/2018/08/intel.jpg" medium="image"/><content:encoded>&lt;hr&gt;&lt;img src="http://localhost:2368/content/images/2018/08/intel.jpg" alt="Intel Galileo Gen2 有线网络上网"&gt;&lt;p&gt;在DeepinLinux中操作，首先要安装minicom&lt;/p&gt;&lt;pre&gt;&lt;code&gt;sudo apt-get update
sudo apt-get install minicom
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后配置minicom&lt;/p&gt;&lt;pre&gt;&lt;code&gt;sudo -s
minicom -s
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;配置好后连上板子，在终端输入&lt;/p&gt;&lt;pre&gt;&lt;code&gt;minicom
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;来访问Intel Galileo2开发板，用户名root，无密码&lt;br&gt;插上网线之后，进行如下操作来配置有线网络&lt;/p&gt;&lt;pre&gt;&lt;code&gt;ifconfig eth0 down
ifconfig eth0 192.168.199.173 netmash 255.255.255.0 up
ifup eth0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;之后可以通过&lt;/p&gt;&lt;pre&gt;&lt;code&gt;ping www.baidu.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;来测试是否可用。&lt;/p&gt;</content:encoded></item><item><title>ECS上proftpd配置方法</title><description>&lt;hr&gt;&lt;p&gt;通过root身份登录，进行接下来的配置&lt;/p&gt;&lt;h2 id="-"&gt;添加用户组、添加用户&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;groupadd ftpusers
useradd -d /mnt/site/site1 -g ftpusers -s /sbin/nologin weba
passwd weba
useradd -d /mnt/ftp -g ftpusers -s /sbin/nologin webb
passwd webb
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="-proftpd-conf"&gt;修改配置文件  proftpd.conf&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;DefaultRoot ~
&amp;lt;Directory "/mnt/site/site1/"&amp;gt;
    &amp;lt;Limit ALL&amp;gt;
        AllowUser weba
        DenyALL
    &amp;lt;/Limit&amp;&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/ecsshang-proftpdpei-zhi-fang-fa/</link><guid isPermaLink="false">5b78dba56b7fce0f556f1c35</guid><category>geek</category><category>中文博客</category><dc:creator>Orange</dc:creator><pubDate>Sun, 19 Aug 2018 02:53:45 GMT</pubDate><media:content url="http://localhost:2368/content/images/2018/08/cloud-1.jpeg" medium="image"/><content:encoded>&lt;hr&gt;&lt;img src="http://localhost:2368/content/images/2018/08/cloud-1.jpeg" alt="ECS上proftpd配置方法"&gt;&lt;p&gt;通过root身份登录，进行接下来的配置&lt;/p&gt;&lt;h2 id="-"&gt;添加用户组、添加用户&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;groupadd ftpusers
useradd -d /mnt/site/site1 -g ftpusers -s /sbin/nologin weba
passwd weba
useradd -d /mnt/ftp -g ftpusers -s /sbin/nologin webb
passwd webb
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="-proftpd-conf"&gt;修改配置文件  proftpd.conf&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;DefaultRoot ~
&amp;lt;Directory "/mnt/site/site1/"&amp;gt;
    &amp;lt;Limit ALL&amp;gt;
        AllowUser weba
        DenyALL
    &amp;lt;/Limit&amp;gt;
    &amp;lt;Limit CWD READ RETR DIRS&amp;gt;
        AllowALL
    &amp;lt;/Limit&amp;gt;
&amp;lt;/Directory&amp;gt;

&amp;lt;Directory "/mnt/ftp/"&amp;gt;
    &amp;lt;Limit ALL&amp;gt;
        AllowUser webb
        DenyALL
    &amp;lt;/Limit&amp;gt;
    &amp;lt;Limit CWD READ RETR DIRS&amp;gt;
        AllowALL
    &amp;lt;/Limit&amp;gt;
&amp;lt;/Directory&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;参考：&lt;br&gt;&lt;a href="http://blog.fens.me/linux-ftp-proftpd/"&gt;http://blog.fens.me/linux-ftp-proftpd/&lt;/a&gt;&lt;br&gt;&lt;a href="http://blog.csdn.net/sin90lzc/article/details/7525670"&gt;http://blog.csdn.net/sin90lzc/article/details/7525670&lt;/a&gt;&lt;/p&gt;</content:encoded></item><item><title>阿里云ECS数据磁盘挂载</title><description>&lt;hr&gt;&lt;p&gt;首先查看所有磁盘&lt;/p&gt;&lt;pre&gt;&lt;code&gt;fdisk -l
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;发现系统盘已经挂载，还有个 /dev/xvdb 64.4GB没有挂载&lt;br&gt;使用&lt;/p&gt;&lt;pre&gt;&lt;code&gt;fdisk /dev/xvdb
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;并选择 n,p,1,最后输入wq回车保存退出&lt;/p&gt;&lt;p&gt;格式化磁盘&lt;/p&gt;&lt;pre&gt;&lt;code&gt;mkfs.ext3 /dev/xvdb1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使系统自动挂载该磁盘&lt;/p&gt;&lt;pre&gt;&lt;code&gt;echo "/dev/xvdb1 /mnt ext3 defaults 0 0" &amp;gt;&amp;gt; /etc/fstab
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样系统启动的时候就会自动挂载&lt;/p&gt;&lt;p&gt;使用&lt;/p&gt;&lt;pre&gt;&lt;code&gt;mount -a
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;手动挂载一次即可。&lt;/p&gt;</description><link>http://localhost:2368/a-li-yun-ecsshu-ju-ci-pan-gua-zai/</link><guid isPermaLink="false">5b78db346b7fce0f556f1c31</guid><category>geek</category><category>中文博客</category><dc:creator>Orange</dc:creator><pubDate>Sun, 19 Aug 2018 02:52:42 GMT</pubDate><media:content url="http://localhost:2368/content/images/2018/08/cloud.jpeg" medium="image"/><content:encoded>&lt;hr&gt;&lt;img src="http://localhost:2368/content/images/2018/08/cloud.jpeg" alt="阿里云ECS数据磁盘挂载"&gt;&lt;p&gt;首先查看所有磁盘&lt;/p&gt;&lt;pre&gt;&lt;code&gt;fdisk -l
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;发现系统盘已经挂载，还有个 /dev/xvdb 64.4GB没有挂载&lt;br&gt;使用&lt;/p&gt;&lt;pre&gt;&lt;code&gt;fdisk /dev/xvdb
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;并选择 n,p,1,最后输入wq回车保存退出&lt;/p&gt;&lt;p&gt;格式化磁盘&lt;/p&gt;&lt;pre&gt;&lt;code&gt;mkfs.ext3 /dev/xvdb1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;使系统自动挂载该磁盘&lt;/p&gt;&lt;pre&gt;&lt;code&gt;echo "/dev/xvdb1 /mnt ext3 defaults 0 0" &amp;gt;&amp;gt; /etc/fstab
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这样系统启动的时候就会自动挂载&lt;/p&gt;&lt;p&gt;使用&lt;/p&gt;&lt;pre&gt;&lt;code&gt;mount -a
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;手动挂载一次即可。&lt;/p&gt;</content:encoded></item><item><title>Arduino 使用的一些细节问题</title><description>&lt;hr&gt;&lt;p&gt;使用Arduino在做实验的时候，遇到了一些问题，这里总结一下。&lt;/p&gt;&lt;h2 id="midi-"&gt;MIDI 库&lt;/h2&gt;&lt;p&gt;从Arduino网上下载的&lt;a href="http://playground.arduino.cc/Main/MIDILibrary"&gt;MIDI库&lt;/a&gt; 在导入的时候应该先将解压出来的文件夹中的src文件夹的内容移到顶层，这样在导入之后，选择“skecth-&amp;gt;import library-&amp;gt;MIDI”才会自动导入头文件。&lt;br&gt;在使用MIDI库的时候，需要设置一下串口的波特率。这个很重要。&lt;br&gt;例如，导入example里的 MIDI_Basic_IO 例子，虽然可以编译下载，但是，在使用 &lt;a href="http://projectgus.github.io/hairless-midiserial/"&gt;HairlessMIDI&lt;/a&gt;进行播放声音的时候是没有声音的，需要在例子的setup()函数最后添加一句设置串口波特率的语句。最终例子代码应当如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#include &amp;lt;MIDI.h&amp;gt;

MIDI_CREATE_DEFAULT_INSTANCE();

#define LED 13   		    // LED pin on Arduino&lt;/code&gt;&lt;/pre&gt;</description><link>http://localhost:2368/untitled/</link><guid isPermaLink="false">5b78da806b7fce0f556f1c2d</guid><category>geek</category><category>中文博客</category><dc:creator>Orange</dc:creator><pubDate>Sun, 19 Aug 2018 02:49:40 GMT</pubDate><media:content url="http://localhost:2368/content/images/2018/08/arduino.jpg" medium="image"/><content:encoded>&lt;hr&gt;&lt;img src="http://localhost:2368/content/images/2018/08/arduino.jpg" alt="Arduino 使用的一些细节问题"&gt;&lt;p&gt;使用Arduino在做实验的时候，遇到了一些问题，这里总结一下。&lt;/p&gt;&lt;h2 id="midi-"&gt;MIDI 库&lt;/h2&gt;&lt;p&gt;从Arduino网上下载的&lt;a href="http://playground.arduino.cc/Main/MIDILibrary"&gt;MIDI库&lt;/a&gt; 在导入的时候应该先将解压出来的文件夹中的src文件夹的内容移到顶层，这样在导入之后，选择“skecth-&amp;gt;import library-&amp;gt;MIDI”才会自动导入头文件。&lt;br&gt;在使用MIDI库的时候，需要设置一下串口的波特率。这个很重要。&lt;br&gt;例如，导入example里的 MIDI_Basic_IO 例子，虽然可以编译下载，但是，在使用 &lt;a href="http://projectgus.github.io/hairless-midiserial/"&gt;HairlessMIDI&lt;/a&gt;进行播放声音的时候是没有声音的，需要在例子的setup()函数最后添加一句设置串口波特率的语句。最终例子代码应当如下：&lt;/p&gt;&lt;pre&gt;&lt;code&gt;#include &amp;lt;MIDI.h&amp;gt;

MIDI_CREATE_DEFAULT_INSTANCE();

#define LED 13   		    // LED pin on Arduino Uno

void setup()
{
    pinMode(LED, OUTPUT);
    MIDI.begin(7);          // Launch MIDI and listen to channel 4
    Serial.begin(115200);   // very important
}

void loop()
{

        digitalWrite(LED,HIGH);
        MIDI.sendNoteOn(42,127,7);  // Send a Note (pitch 42, velo 127 on channel 7)
        delay(1000);		        // Wait for a second
        MIDI.sendNoteOff(42,0,7);   // Stop the note
        digitalWrite(LED,LOW);
        delay(1000);	
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;date 2014年11月21日&lt;/p&gt;</content:encoded></item><item><title>Test open vswitch basic performance with iperf3 using Docker</title><description>&lt;p&gt;Use ovs(openvswitch) as docker network switch and test its performance.&lt;/p&gt;&lt;h2 id="install-ovs"&gt;Install OVS&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;sudo apt-get install openvswitch-switch&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="install-ovs-docker-utility"&gt;Install ovs-docker utility&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;cd /usr/bin
wget https://raw.githubusercontent.com/openvswitch/ovs/master/utilities/ovs-docker
chmod a+rwx ovs-docker&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="create-an-ovs-bridge"&gt;Create an OVS bridge&lt;/h2&gt;&lt;p&gt;Firstly, add an ovs bridge and then assign an&lt;/p&gt;</description><link>http://localhost:2368/test-open-vswitch-basic-performance-with-iperf3-using-docker/</link><guid isPermaLink="false">5b7820e466cf7f3af7fcd932</guid><category>docker</category><dc:creator>Orange</dc:creator><pubDate>Sat, 18 Aug 2018 13:44:41 GMT</pubDate><media:content url="http://localhost:2368/content/images/2018/08/network.jpg" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2018/08/network.jpg" alt="Test open vswitch basic performance with iperf3 using Docker"&gt;&lt;p&gt;Use ovs(openvswitch) as docker network switch and test its performance.&lt;/p&gt;&lt;h2 id="install-ovs"&gt;Install OVS&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;sudo apt-get install openvswitch-switch&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="install-ovs-docker-utility"&gt;Install ovs-docker utility&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;cd /usr/bin
wget https://raw.githubusercontent.com/openvswitch/ovs/master/utilities/ovs-docker
chmod a+rwx ovs-docker&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="create-an-ovs-bridge"&gt;Create an OVS bridge&lt;/h2&gt;&lt;p&gt;Firstly, add an ovs bridge and then assign an IP address to it as network gateway. So that other containers can connect to this bridge network.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;sudo ovs-vsctl add-br ovs-br1
sudo ifconfig ovs-br1 173.16.1.1 netmask 255.255.255.0 up&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="add-iperf3-server-on-the-bridge"&gt;Add iperf3 server on the bridge&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;docker run  -it --rm --name=iperf3-server -p 5201:5201 networkstatic/iperf3 -s          
sudo ovs-docker add-port ovs-br1 eth1 iperf3-server --ipaddress=173.16.1.3/24&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="add-iperf3-client-on-the-bridge"&gt;Add iperf3 client on the bridge&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;docker run  -it --rm --name=iperf3-client networkstatic/iperf3 -c 173.16.1.3
sudo ovs-docker add-port ovs-br1 eth1 iperf3-client --ipaddress=173.16.1.6/24&lt;/code&gt;&lt;/pre&gt;&lt;h2 id="check-the-log"&gt;Check the log&lt;/h2&gt;&lt;p&gt;You will get the result from both client and server side. If the two containers are not hosted on a same host, then the host's network interface should also be connected to the bridge.&lt;/p&gt;</content:encoded></item><item><title>Host blogs on github pages using Ghost</title><description>&lt;p&gt;Github pages provide a method to host your blogs and stories without AWS or any other Cloud platform.&lt;/p&gt;&lt;p&gt;Here are some brief steps you need to do to start posting blogs in this way.&lt;/p&gt;&lt;p&gt;Because Ghost needs LTS version nodejs, if you installed latest version, you need to downgrade it.&lt;/p&gt;</description><link>http://localhost:2368/host-blogs-on-github-pages-using-ghost/</link><guid isPermaLink="false">5b7819a466cf7f3af7fcd929</guid><category>geek</category><dc:creator>Orange</dc:creator><pubDate>Sat, 18 Aug 2018 13:13:16 GMT</pubDate><media:content url="http://localhost:2368/content/images/2018/08/pic1.jpg" medium="image"/><content:encoded>&lt;img src="http://localhost:2368/content/images/2018/08/pic1.jpg" alt="Host blogs on github pages using Ghost"&gt;&lt;p&gt;Github pages provide a method to host your blogs and stories without AWS or any other Cloud platform.&lt;/p&gt;&lt;p&gt;Here are some brief steps you need to do to start posting blogs in this way.&lt;/p&gt;&lt;p&gt;Because Ghost needs LTS version nodejs, if you installed latest version, you need to downgrade it.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;brew uninstall node
brew unlink node
brew install node@8
echo 'export PATH="/usr/local/opt/node@8/bin:$PATH"' &amp;gt;&amp;gt; ~/.zshrc
brew link node@8
node --version

brew install npm
npm install ghost-cli -g&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Congratulations! You have installed ghost cli on your system. The next step is to initialize a blog.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;mkdir blog
cd blog
ghost install local
pip install buster
buster generate
cd static
git init .
git remote add origin git@github.com:xxxx/xxx.git
git add .
git commit -m "init"
git push -u origin master -f&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Don't forget to write down your ideas, stories and blogs everyday and update to github pages using&lt;/p&gt;&lt;pre&gt;&lt;code&gt;buster generate
cd static
git commit -am "wonderful blogs"
git push&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;It's a new start here.&lt;/p&gt;&lt;p&gt;I will post some series of tutorial on Python/Golang/Docker/Tensorflow and so on.&lt;/p&gt;&lt;p&gt;Let's go!&lt;/p&gt;</content:encoded></item><item><title>Welcome to Ghost</title><description>Welcome, it's great to have you here.
We know that first impressions are important, so we've populated your new site with some initial getting started posts that will help you get familiar with everything in no time.</description><link>http://localhost:2368/welcome/</link><guid isPermaLink="false">5b77f5d966cf7f3af7fcd888</guid><category>Getting Started</category><dc:creator>Ghost</dc:creator><pubDate>Sat, 18 Aug 2018 10:32:56 GMT</pubDate><media:content url="https://casper.ghost.org/v2.0.0/images/welcome-to-ghost.jpg" medium="image"/><content:encoded>&lt;img src="https://casper.ghost.org/v2.0.0/images/welcome-to-ghost.jpg" alt="Welcome to Ghost"&gt;&lt;p&gt;👋 Welcome, it's great to have you here.&lt;/p&gt;&lt;p&gt;We know that first impressions are important, so we've populated your new site with some initial &lt;strong&gt;getting started&lt;/strong&gt; posts that will help you get familiar with everything in no time. This is the first one!&lt;/p&gt;&lt;p&gt;&lt;strong&gt;A few things you should know upfront&lt;/strong&gt;:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Ghost is designed for ambitious, professional publishers who want to actively build a business around their content. That's who it works best for. &lt;/li&gt;&lt;li&gt;The entire platform can be modified and customised to suit your needs. It's very powerful, but does require some knowledge of code. Ghost is not necessarily a good platform for beginners or people who just want a simple personal blog. &lt;/li&gt;&lt;li&gt;For the best experience we recommend downloading the &lt;a href="https://ghost.org/downloads/"&gt;Ghost Desktop App&lt;/a&gt; for your computer, which is the best way to access your Ghost site on a desktop device. &lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Ghost is made by an independent non-profit organisation called the Ghost Foundation. We are 100% self funded by revenue from our &lt;a href="https://ghost.org/pricing"&gt;Ghost(Pro)&lt;/a&gt; service, and every penny we make is re-invested into funding further development of free, open source technology for modern publishing.&lt;/p&gt;&lt;p&gt;The version of Ghost you are looking at right now would not have been made possible without generous contributions from the open source &lt;a href="https://github.com/TryGhost"&gt;community&lt;/a&gt;.&lt;/p&gt;&lt;h2 id="next-up-the-editor"&gt;Next up, the editor&lt;/h2&gt;&lt;p&gt;The main thing you'll want to read about next is probably: &lt;a href="http://localhost:2368/the-editor/"&gt;the Ghost editor&lt;/a&gt;. This is where the good stuff happens.&lt;/p&gt;&lt;blockquote&gt;&lt;em&gt;By the way, once you're done reading, you can simply delete the default &lt;strong&gt;Ghost&lt;/strong&gt; user from your team to remove all of these introductory posts! &lt;/em&gt;&lt;/blockquote&gt;</content:encoded></item><item><title>Writing posts with Ghost ✍️</title><description>Getting started with the editor is simple, with familiar formatting options in a functional toolbar and the ability to add dynamic content seamlessly.</description><link>http://localhost:2368/the-editor/</link><guid isPermaLink="false">5b77f5d966cf7f3af7fcd886</guid><category>Getting Started</category><dc:creator>Ghost</dc:creator><pubDate>Sat, 18 Aug 2018 10:32:55 GMT</pubDate><media:content url="https://casper.ghost.org/v2.0.0/images/writing-posts-with-ghost.jpg" medium="image"/><content:encoded>&lt;img src="https://casper.ghost.org/v2.0.0/images/writing-posts-with-ghost.jpg" alt="Writing posts with Ghost ✍️"&gt;&lt;p&gt;Ghost has a powerful visual editor with familiar formatting options, as well as the ability to seamlessly add dynamic content. &lt;/p&gt;&lt;p&gt;Select the text to add formatting, headers or create links, or use Markdown shortcuts to do the work for you - if that's your thing. &lt;/p&gt;&lt;figure class="kg-image-card"&gt;&lt;img src="https://casper.ghost.org/v2.0.0/images/formatting-editor-demo.gif" class="kg-image" alt="Writing posts with Ghost ✍️"&gt;&lt;/figure&gt;&lt;h2 id="rich-editing-at-your-fingertips"&gt;Rich editing at your fingertips&lt;/h2&gt;&lt;p&gt;The editor can also handle rich media objects, called &lt;strong&gt;cards&lt;/strong&gt;. &lt;/p&gt;&lt;p&gt;You can insert a card either by clicking the  &lt;code&gt;+&lt;/code&gt;  button on a new line, or typing  &lt;code&gt;/&lt;/code&gt;  on a new line to search for a particular card. This allows you to efficiently insert&lt;strong&gt; images&lt;/strong&gt;, &lt;strong&gt;markdown&lt;/strong&gt;, &lt;strong&gt;html&lt;/strong&gt; and &lt;strong&gt;embeds&lt;/strong&gt;.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;For Example&lt;/strong&gt;:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Insert a video from YouTube directly into your content by pasting the URL &lt;/li&gt;&lt;li&gt;Create unique content like a button or content opt-in using the HTML card&lt;/li&gt;&lt;li&gt;Need to share some code? Embed code blocks directly &lt;/li&gt;&lt;/ul&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;header class="site-header outer"&amp;gt;
    &amp;lt;div class="inner"&amp;gt;
        {{&amp;gt; "site-nav"}}
    &amp;lt;/div&amp;gt;
&amp;lt;/header&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;h1 id="working-with-images-in-posts"&gt;Working with images in posts&lt;/h1&gt;&lt;p&gt;You can add images to your posts in many ways:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Upload from your computer&lt;/li&gt;&lt;li&gt;Click and drag an image into the browser&lt;/li&gt;&lt;li&gt;Paste directly into the editor from your clipboard&lt;/li&gt;&lt;li&gt;Insert using a URL&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Once inserted you can blend images beautifully into your content at different sizes and add captions wherever needed.&lt;/p&gt;&lt;figure class="kg-image-card"&gt;&lt;img src="https://casper.ghost.org/v2.0.0/images/using-images-demo.gif" class="kg-image" alt="Writing posts with Ghost ✍️"&gt;&lt;/figure&gt;&lt;p&gt;The post settings menu and publishing options can be found in the top right hand corner. For more advanced tips on post settings check out the &lt;a href="http://localhost:2368/publishing-options/"&gt;publishing options&lt;/a&gt; post!&lt;/p&gt;</content:encoded></item><item><title>Publishing options</title><description>The Ghost editor has everything you need to fully optimise your content. This is where you can add tags and authors, feature a post, or turn a post into a page.</description><link>http://localhost:2368/publishing-options/</link><guid isPermaLink="false">5b77f5d966cf7f3af7fcd884</guid><category>Getting Started</category><dc:creator>Ghost</dc:creator><pubDate>Sat, 18 Aug 2018 10:32:54 GMT</pubDate><media:content url="https://casper.ghost.org/v2.0.0/images/publishing-options.jpg" medium="image"/><content:encoded>&lt;img src="https://casper.ghost.org/v2.0.0/images/publishing-options.jpg" alt="Publishing options"&gt;&lt;p&gt;The Ghost editor has everything you need to fully optimise your content. This is where you can add tags and authors, feature a post, or turn a post into a page. &lt;/p&gt;&lt;blockquote&gt;Access the post settings menu in the top right hand corner of the editor. &lt;/blockquote&gt;&lt;h2 id="post-feature-image"&gt;Post feature image&lt;/h2&gt;&lt;p&gt;Insert your post feature image from the very top of the post settings menu. Consider resizing or optimising your image first to ensure it's an appropriate size.&lt;/p&gt;&lt;h2 id="structured-data-seo"&gt;Structured data &amp;amp; SEO&lt;/h2&gt;&lt;p&gt;Customise your social media sharing cards for Facebook and Twitter, enabling you to add custom images, titles and descriptions for social media.&lt;/p&gt;&lt;p&gt;There’s no need to hard code your meta data. You can set your meta title and description using the post settings tool, which has a handy character guide and SERP preview. &lt;/p&gt;&lt;p&gt;Ghost will automatically implement structured data for your publication using JSON-LD to further optimise your content.&lt;/p&gt;&lt;pre&gt;&lt;code&gt;{
    "@context": "https://schema.org",
    "@type": "Article",
    "publisher": {
        "@type": "Organization",
        "name": "Publishing options",
        "logo": "https://casper.ghost.org/ghost-logo.svg"
    },
    "author": {
        "@type": "Person",
        "name": "Ghost",
        "url": "http://demo.ghost.io/author/ghost/",
        "sameAs": []
    },
    "headline": "Publishing options",
    "url": "http://demo.ghost.io/publishing-options",
    "datePublished": "2018-08-08T11:44:00.000Z",
    "dateModified": "2018-08-09T12:06:21.000Z",
    "keywords": "Getting Started",
    "description": "The Ghost editor has everything you need to fully optimise your content. This is where you can add tags and authors, feature a post, or turn a post into a page.",
    }
}
    &lt;/code&gt;&lt;/pre&gt;&lt;p&gt;You can test that the structured data &lt;a href="https://schema.org/"&gt;schema&lt;/a&gt; on your site is working as it should using &lt;a href="https://search.google.com/structured-data/testing-tool" rel="noreferrer nofollow noopener"&gt;Google’s structured data tool&lt;/a&gt;. &lt;/p&gt;&lt;h2 id="code-injection"&gt;Code Injection&lt;/h2&gt;&lt;p&gt;This tool allows you to inject code on a per post or page basis, or across your entire site. This means you can modify CSS, add unique tracking codes, or add other scripts to the head or foot of your publication without making edits to your theme files. &lt;/p&gt;&lt;p&gt;&lt;strong&gt;To add code site-wide&lt;/strong&gt;, use the code injection tool &lt;a href="http://localhost:2368/ghost/settings/code-injection/"&gt;in the main admin menu&lt;/a&gt;. This is useful for adding a Facebook Pixel, a Google Analytics tracking code, or to start tracking with any other analytics tool.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;To add code to a post or page&lt;/strong&gt;, use the code injection tool within the post settings menu. This is useful if you want to add art direction, scripts or styles that are only applicable to one post or page. &lt;/p&gt;&lt;p&gt;From here, you might be interested in managing some more specific &lt;a href="http://localhost:2368/admin-settings/"&gt;admin settings&lt;/a&gt;!&lt;/p&gt;</content:encoded></item><item><title>Managing admin settings</title><description>There are a couple of things to do next while you're getting set up: making your site private and inviting your team.</description><link>http://localhost:2368/admin-settings/</link><guid isPermaLink="false">5b77f5d866cf7f3af7fcd882</guid><category>Getting Started</category><dc:creator>Ghost</dc:creator><pubDate>Sat, 18 Aug 2018 10:32:53 GMT</pubDate><media:content url="https://casper.ghost.org/v2.0.0/images/admin-settings.jpg" medium="image"/><content:encoded>&lt;img src="https://casper.ghost.org/v2.0.0/images/admin-settings.jpg" alt="Managing admin settings"&gt;&lt;p&gt;There are a couple of things to do next while you're getting set up:&lt;/p&gt;&lt;h1 id="make-your-site-private"&gt;Make your site private&lt;/h1&gt;&lt;p&gt;If you've got a publication that you don't want the world to see yet because it's not ready to launch, you can hide your Ghost site behind a basic shared pass-phrase.&lt;/p&gt;&lt;p&gt;You can toggle this preference on at the bottom of Ghost's &lt;a href="http://localhost:2368/ghost/settings/general/"&gt;General Settings&lt;/a&gt;:&lt;/p&gt;&lt;figure class="kg-image-card"&gt;&lt;img src="https://casper.ghost.org/v1.0.0/images/private.png" class="kg-image" alt="Managing admin settings"&gt;&lt;/figure&gt;&lt;p&gt;Ghost will give you a short, randomly generated pass-phrase which you can share with anyone who needs access to the site while you're working on it. While this setting is enabled, all search engine optimisation features will be switched off to help keep your site under the radar.&lt;/p&gt;&lt;p&gt;Do remember though, this is &lt;em&gt;not&lt;/em&gt; secure authentication. You shouldn't rely on this feature for protecting important private data. It's just a simple, shared pass-phrase for some very basic privacy.&lt;/p&gt;&lt;hr&gt;&lt;h1 id="invite-your-team"&gt;Invite your team &lt;/h1&gt;&lt;p&gt;Ghost has a number of different user roles for your team:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Contributors&lt;/strong&gt;&lt;br&gt;This is the base user level in Ghost. Contributors can create and edit their own draft posts, but they are unable to edit drafts of others or publish posts. Contributors are &lt;strong&gt;untrusted&lt;/strong&gt; users with the most basic access to your publication.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Authors&lt;/strong&gt;&lt;br&gt;Authors are the 2nd user level in Ghost. Authors can write, edit  and publish their own posts. Authors are &lt;strong&gt;trusted&lt;/strong&gt; users. If you don't trust users to be allowed to publish their own posts, they should be set as Contributors.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Editors&lt;/strong&gt;&lt;br&gt;Editors are the 3rd user level in Ghost. Editors can do everything that an Author can do, but they can also edit and publish the posts of others - as well as their own. Editors can also invite new Contributors+Authors to the site.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Administrators&lt;/strong&gt;&lt;br&gt;The top user level in Ghost is Administrator. Again, administrators can do everything that Authors and Editors can do, but they can also edit all site settings and data, not just content. Additionally, administrators have full access to invite, manage or remove any other user of the site.&lt;br&gt;&lt;br&gt;&lt;strong&gt;The Owner&lt;/strong&gt;&lt;br&gt;There is only ever one owner of a Ghost site. The owner is a special user which has all the same permissions as an Administrator, but with two exceptions: The Owner can never be deleted. And in some circumstances the owner will have access to additional special settings if applicable. For example: billing details, if using &lt;a href="https://ghost.org/pricing/"&gt;&lt;strong&gt;Ghost(Pro)&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;&lt;blockquote&gt;&lt;em&gt;It's a good idea to ask all of your users to fill out their user profiles, including bio and social links. These will populate rich structured data for posts and generally create more opportunities for themes to fully populate their design.&lt;/em&gt;&lt;/blockquote&gt;&lt;p&gt;Next up: &lt;a href="http://localhost:2368/organising-content/"&gt;Organising your content&lt;/a&gt; &lt;/p&gt;</content:encoded></item><item><title>Organising your content</title><description>Ghost has a flexible organisational taxonomy called tags which can be used to configure your site structure using dynamic routing.</description><link>http://localhost:2368/organising-content/</link><guid isPermaLink="false">5b77f5d866cf7f3af7fcd880</guid><category>Getting Started</category><dc:creator>Ghost</dc:creator><pubDate>Sat, 18 Aug 2018 10:32:52 GMT</pubDate><media:content url="https://casper.ghost.org/v2.0.0/images/organising-your-content.jpg" medium="image"/><content:encoded>&lt;img src="https://casper.ghost.org/v2.0.0/images/organising-your-content.jpg" alt="Organising your content"&gt;&lt;p&gt;Ghost has a flexible organisational taxonomy called&lt;strong&gt; tags&lt;/strong&gt; which can be used to configure your site structure using &lt;strong&gt;dynamic routing&lt;/strong&gt;. &lt;/p&gt;&lt;h1 id="basic-tagging"&gt;Basic Tagging&lt;/h1&gt;&lt;p&gt;You can think of tags like Gmail labels. By tagging posts with one or more keyword, you can organise articles into buckets of related content.&lt;/p&gt;&lt;p&gt;When you create content for your publication you can assign tags to help differentiate between categories of content. &lt;/p&gt;&lt;p&gt;For example you may tag some content with  News and other content with Podcast, which would create two distinct categories of content listed on &lt;code&gt;/tag/news/&lt;/code&gt; and &lt;code&gt;/tag/weather/&lt;/code&gt;, respectively.&lt;/p&gt;&lt;p&gt;If you tag a post with both &lt;code&gt;News&lt;/code&gt; &lt;em&gt;and&lt;/em&gt; &lt;code&gt;Weather&lt;/code&gt; - then it appears in both sections. Tag archives are like dedicated home-pages for each category of content that you have. They have their own pages, their own RSS feeds, and can support their own cover images and meta data.&lt;/p&gt;&lt;h1 id="the-primary-tag"&gt;The primary tag&lt;/h1&gt;&lt;p&gt;Inside the Ghost editor, you can drag and drop tags into a specific order. The first tag in the list is always given the most importance, and some themes will only display the primary tag (the first tag in the list) by default. &lt;/p&gt;&lt;blockquote&gt;&lt;em&gt;&lt;strong&gt;News&lt;/strong&gt;, Technology, Startup&lt;/em&gt;&lt;/blockquote&gt;&lt;p&gt;So you can add the most important tag which you want to show up in your theme, but also add related tags which are less important.&lt;/p&gt;&lt;h1 id="private-tags"&gt;Private tags&lt;/h1&gt;&lt;p&gt;Sometimes you may want to assign a post a specific tag, but you don't necessarily want that tag appearing in the theme or creating an archive page. In Ghost, hashtags are private and can be used for special styling.&lt;/p&gt;&lt;p&gt;For example, if you sometimes publish posts with video content - you might want your theme to adapt and get rid of the sidebar for these posts, to give more space for an embedded video to fill the screen. In this case, you could use private tags to tell your theme what to do.&lt;/p&gt;&lt;blockquote&gt;&lt;em&gt;&lt;strong&gt;News&lt;/strong&gt;, #video&lt;/em&gt;&lt;/blockquote&gt;&lt;p&gt;Here, the theme would assign the post publicly displayed tags of News - but it would also keep a private record of the post being tagged with #video. In your theme, you could then look for private tags conditionally and give them special formatting. &lt;/p&gt;&lt;blockquote&gt;&lt;em&gt;You can find documentation for theme development techniques like this and many more over on Ghost's extensive &lt;a href="https://themes.ghost.org/v2.0.0/docs"&gt;theme documentation&lt;/a&gt;.&lt;/em&gt;&lt;/blockquote&gt;&lt;h1 id="dynamic-routing"&gt;Dynamic Routing&lt;/h1&gt;&lt;p&gt;Dynamic routing gives you the ultimate freedom to build a custom publication to suit your needs. Routes are rules that map URL patterns to your content and templates. &lt;/p&gt;&lt;p&gt;For example, you may not want content tagged with &lt;code&gt;News&lt;/code&gt; to exist on: &lt;code&gt;example.com/tag/news&lt;/code&gt;. Instead, you want it to exist on &lt;code&gt;example.com/news&lt;/code&gt; . &lt;/p&gt;&lt;p&gt;In this case you can use dynamic routes to create customised collections of content on your site. It's also possible to use multiple templates in your theme to render each content type differently.&lt;/p&gt;&lt;p&gt;There are lots of use cases for dynamic routing with Ghost, here are a few common examples: &lt;/p&gt;&lt;ul&gt;&lt;li&gt;Setting a custom home page with its own template&lt;/li&gt;&lt;li&gt;Having separate content hubs for blog and podcast, that render differently, and have custom RSS feeds to support two types of content&lt;/li&gt;&lt;li&gt;Creating a founders column as a unique view, by filtering content created by specific authors&lt;/li&gt;&lt;li&gt;Including dates in permalinks for your posts&lt;/li&gt;&lt;li&gt;Setting posts to have a URL relative to their primary tag like &lt;code&gt;example.com/europe/story-title/&lt;/code&gt;&lt;br&gt;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;em&gt;Dynamic routing can be configured in Ghost using &lt;a href="http://yaml.org/spec/1.2/spec.html" rel="noreferrer nofollow noopener"&gt;YAML&lt;/a&gt; files. Read our dynamic routing &lt;a href="https://docs.ghost.org/docs/dynamic-routing"&gt;documentation&lt;/a&gt; for further details.&lt;/em&gt;&lt;/blockquote&gt;&lt;p&gt;You can further customise your site using &lt;a href="http://localhost:2368/apps-integrations/"&gt;Apps &amp;amp; Integrations&lt;/a&gt;.&lt;/p&gt;</content:encoded></item></channel></rss>